---
interface Props {
  a: string;
}
const { a } = Astro.props;
---

<meta charset="utf-8" />
<meta name="viewport" content="width=device-width,initial-scale=1" />
<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
<title>{`Page ${a}`}</title>
<style is:global>
  html {
    scroll-behavior: initial;
  }
  html::view-transition-group(*) {
    animation-duration: 0.8s;
  }
</style>
<script>
  window.addEventListener("scrollend", () =>
    console.log("scrollend: ", scrollY)
  );
  // @ts-ignore
  if (window.navigation) {
    const listener = (e: any) => {
      console.log("navigate: ", e);
      const nav: NavigateEvent = e as NavigateEvent;
      e.intercept({
        async handler() {
          console.log(
            "window.navigation.transition.from :>> ",
          // @ts-ignore
            window.navigation.transition.from.url
          );
          const res = await fetch(new URL(nav.destination.url, location.href));
          const text = await res.text();
          window.document.documentElement.replaceWith(
            new DOMParser().parseFromString(text, "text/html").documentElement
          );
        },
      });
    };
    // @ts-ignore
    //   navigation.addEventListener("navigate", listener);
  }
</script>
